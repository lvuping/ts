---
import Layout from '../layouts/Layout.astro';
import CodeSnippet from '../components/CodeSnippet.astro';
import '../styles/globals.css';

// Sample code snippets - in a real app, these would come from a database
const snippets = [
  {
    title: "ABAP Select Statement",
    code: `DATA: lt_users TYPE TABLE OF usr02,
      ls_user TYPE usr02.

SELECT * FROM usr02
  INTO TABLE lt_users
  WHERE bname LIKE 'A%'
  AND gltgb >= sy-datum.

LOOP AT lt_users INTO ls_user.
  WRITE: / ls_user-bname, ls_user-ustyp.
ENDLOOP.`,
    lang: "abap"
  },
  {
    title: "JavaScript Async Function",
    code: `async function fetchUserData(userId) {
  try {
    const response = await fetch(\`/api/users/\${userId}\`);
    if (!response.ok) {
      throw new Error(\`HTTP error! status: \${response.status}\`);
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Error fetching user data:', error);
    return null;
  }
}

// Usage
const user = await fetchUserData(123);
console.log(user);`,
    lang: "javascript"
  },
  {
    title: "Python Data Processing",
    code: `import pandas as pd
import numpy as np

def process_sales_data(file_path):
    """Process sales data and return summary statistics"""
    # Read CSV file
    df = pd.read_csv(file_path)
    
    # Clean data
    df['date'] = pd.to_datetime(df['date'])
    df['amount'] = pd.to_numeric(df['amount'], errors='coerce')
    df = df.dropna()
    
    # Calculate statistics
    summary = {
        'total_sales': df['amount'].sum(),
        'average_sale': df['amount'].mean(),
        'top_product': df.groupby('product')['amount'].sum().idxmax(),
        'daily_average': df.groupby(df['date'].dt.date)['amount'].sum().mean()
    }
    
    return summary

# Example usage
results = process_sales_data('sales_data.csv')
print(f"Total Sales: ${'{'}results['total_sales']:,.2f{'}'}")`,
    lang: "python"
  },
  {
    title: "AutoHotkey Window Manager",
    code: `; Window management script
#NoEnv
SendMode Input
SetWorkingDir %A_ScriptDir%

; Win + Arrow keys for window management
#Left::
    WinGetPos, X, Y, Width, Height, A
    WinMove, A,, 0, 0, A_ScreenWidth/2, A_ScreenHeight
Return

#Right::
    WinGetPos, X, Y, Width, Height, A
    WinMove, A,, A_ScreenWidth/2, 0, A_ScreenWidth/2, A_ScreenHeight
Return

#Up::
    WinMaximize, A
Return

#Down::
    WinMinimize, A
Return

; Ctrl+Alt+T for new terminal
^!t::
    Run, wt.exe
Return`,
    lang: "autohotkey"
  }
];
---

<Layout title="Code Snippet Manager">
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <header class="bg-white dark:bg-gray-800 shadow">
      <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8 flex justify-between items-center">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
          Code Snippet Manager
        </h1>
        <button
          id="theme-toggle"
          class="p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"
          aria-label="Toggle theme"
        >
          <svg class="w-6 h-6 hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
          </svg>
          <svg class="w-6 h-6 block dark:hidden" fill="currentColor" viewBox="0 0 20 20">
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
          </svg>
        </button>
      </div>
    </header>

    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
      <div class="px-4 py-6 sm:px-0">
        <div class="grid gap-6">
          {snippets.map((snippet) => (
            <CodeSnippet
              title={snippet.title}
              code={snippet.code}
              lang={snippet.lang}
            />
          ))}
        </div>
      </div>
    </main>

    <footer class="bg-white dark:bg-gray-800 shadow mt-12">
      <div class="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8">
        <p class="text-center text-sm text-gray-500 dark:text-gray-400">
          Code Snippet Manager - Secure snippet storage with syntax highlighting
        </p>
      </div>
    </footer>
  </div>
</Layout>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  const html = document.documentElement;
  
  // Check for saved theme preference or default to light
  const currentTheme = localStorage.getItem('theme') || 'light';
  html.classList.toggle('dark', currentTheme === 'dark');
  
  themeToggle?.addEventListener('click', () => {
    const isDark = html.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  });
</script>