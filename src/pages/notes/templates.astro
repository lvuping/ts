---
import Layout from '../../layouts/Layout.astro';
import '../../styles/globals.css';
import { getAllTemplates } from '../../lib/notes';

const templates = await getAllTemplates();
---

<Layout title="Note Templates">
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <div class="max-w-6xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
      <div class="mb-8 flex justify-between items-center">
        <div>
          <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Note Templates</h1>
          <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">
            Quick start your notes with pre-defined templates
          </p>
        </div>
        <a href="/" class="text-primary hover:text-primary/80 flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="m15 18-6-6 6-6"/>
          </svg>
          Back to PKM
        </a>
      </div>

      <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {templates.map((template) => (
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-shadow">
            <div class="p-6">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                {template.name}
              </h3>
              <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
                {template.description}
              </p>
              <div class="mb-4">
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                  {template.category}
                </span>
                <span class="ml-2 text-xs text-gray-500 dark:text-gray-400">
                  {template.language}
                </span>
              </div>
              <div class="mb-4">
                {template.tags.map((tag) => (
                  <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-700 dark:bg-gray-700 dark:text-gray-300 mr-1">
                    #{tag}
                  </span>
                ))}
              </div>
              <button
                data-template-id={template.id}
                class="w-full px-4 py-2 bg-primary text-primary-foreground hover:bg-primary/90 rounded-md font-medium transition-colors text-sm"
              >
                Use Template
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</Layout>

<script define:vars={{ templatesData: templates }} is:inline>
  document.querySelectorAll('[data-template-id]').forEach(button => {
    button.addEventListener('click', (e) => {
      const templateId = e.currentTarget.getAttribute('data-template-id');
      const template = templatesData.find(t => t.id === templateId);
      
      if (template) {
        // Store template in sessionStorage
        sessionStorage.setItem('selectedTemplate', JSON.stringify(template));
        window.location.href = '/notes/new';
      }
    });
  });
</script>